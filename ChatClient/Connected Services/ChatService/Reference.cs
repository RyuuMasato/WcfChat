//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatClient.ChatService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChatService.IChatService")]
    public interface IChatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/PostNote", ReplyAction="http://tempuri.org/IChatService/PostNoteResponse")]
        void PostNote(string from, string note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/PostNote", ReplyAction="http://tempuri.org/IChatService/PostNoteResponse")]
        System.Threading.Tasks.Task PostNoteAsync(string from, string note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/CreateUser", ReplyAction="http://tempuri.org/IChatService/CreateUserResponse")]
        void CreateUser(string nm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/CreateUser", ReplyAction="http://tempuri.org/IChatService/CreateUserResponse")]
        System.Threading.Tasks.Task CreateUserAsync(string nm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/LoginUser", ReplyAction="http://tempuri.org/IChatService/LoginUserResponse")]
        void LoginUser(string nm, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/LoginUser", ReplyAction="http://tempuri.org/IChatService/LoginUserResponse")]
        System.Threading.Tasks.Task LoginUserAsync(string nm, string pass);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceChannel : ChatClient.ChatService.IChatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatServiceClient : System.ServiceModel.ClientBase<ChatClient.ChatService.IChatService>, ChatClient.ChatService.IChatService {
        
        public ChatServiceClient() {
        }
        
        public ChatServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void PostNote(string from, string note) {
            base.Channel.PostNote(from, note);
        }
        
        public System.Threading.Tasks.Task PostNoteAsync(string from, string note) {
            return base.Channel.PostNoteAsync(from, note);
        }
        
        public void CreateUser(string nm) {
            base.Channel.CreateUser(nm);
        }
        
        public System.Threading.Tasks.Task CreateUserAsync(string nm) {
            return base.Channel.CreateUserAsync(nm);
        }
        
        public void LoginUser(string nm, string pass) {
            base.Channel.LoginUser(nm, pass);
        }
        
        public System.Threading.Tasks.Task LoginUserAsync(string nm, string pass) {
            return base.Channel.LoginUserAsync(nm, pass);
        }
    }
}
